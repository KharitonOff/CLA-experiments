name: "Contributor assistant | CLA"
description: "An action to handle the Contributor License Agreement (CLA)"
author: "SAP"
branding:
  icon: "award"
  color: blue
inputs:
  signatures-path:
    description: "Give a path for storing signatures in a json file "
    default: "./signatures/cla.json"
    required: false
  branch:
    description: "provide a branch where all the signatures are stored"
    default: "main"
    required: false
  # allowlist:
  #   description: "users in the allow list don't have to sign the CLA document"
  #   default: ""
  # remote-repository-name:
  #   description: "provide the remote repository name where all the signatures should be stored"
  # remote-organization-name:
  #   description: "provide the remote organization name where all the signatures should be stored"
  # path-to-document:
  #   description: "Fully qualified web link to the document - example: https://github.com/cla-assistant/github-action/blob/master/SAPCLA.md"
  # signed-commit-message:
  #   description: "Commit message when a new contributor signs the CLA in a PR"
  # signed-empty-commit-message:
  #   description: "Commit message when a new contributor signs the CLA (empty)"
  # create-file-commit-message:
  #   description: "Commit message when a new file is created"
  # custom-notsigned-prcomment:
  #   description: "Introductory message to ask new contributors to sign"
  # custom-pr-sign-comment:
  #   description: "The signature to be committed in order to sign the CLA."
  # custom-allsigned-prcomment:
  #   description: "pull request comment when everyone has signed, defaults to **CLA Assistant Lite** All Contributors have signed the CLA."
  # use-dco-flag:
  #   description: "Set this to true if you want to use a dco instead of a cla"
  #   default: false
  # lock-pullrequest-aftermerge:
  #   description: "Will lock the pull request after merge so that the signature the contributors cannot revoke their signature comments after merge"
  #   default: true
runs:
  using: "composite"
  steps:
    - run: |
        version="1.10.3"
        curl -fsSL https://deno.land/x/dvm/install.sh | sh
        source "$HOME/.bash_profile"
        dvm install $version
        deno_install="$HOME/.deno/bin"
        echo $deno_install >> $GITHUB_PATH
      shell: bash
    - run: deno run -A --unstable ${{ github.action_path }}/mod.ts ${{ inputs.branch }}
      shell: bash