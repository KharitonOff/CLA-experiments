name: Lint

on:
  push:
  pull_request:

jobs:
  tests:
    name: Code quality checks
    runs-on: ubuntu-latest
    timeout-minutes: 5
    
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Run linter
        run: |
          cd src
          deno lint

      - name: Check Formatting
        run: |
          cd src
          deno fmt --check

      - name: Run tests
        run: deno test --allow-net --allow-env

  bundle:
    name: Bundle
    needs: tests
    if: contains(github.ref, 'main')
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      #   with:
      #     ref: releases
      
      - name: Pull from main
        run: |
          git fetch origin main
          git reset --hard FETCH_HEAD
          git clean -df

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      # esbuild is node based
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install esbuild
        run: npm install esbuild -g

      - name: Run bundler
        run: deno bundle src/cla-functions/cli.ts | esbuild --minify > actions/cla/bundle.js
      
      - uses: EndBug/add-and-commit@v7
        with:
          branch: releases
          default_author: github_actions
          message: Automated bundle

          # The flag used on the pull strategy. Use NO-PULL to avoid the action pulling at all.
          # Default: '--no-rebase'
          # pull_strategy: 'NO-PULL or --no-rebase or --no-ff or --rebase'

          # Arguments for the git tag command (the tag name always needs to be the first word not preceded by an hyphen)
          # Default: ''
          # tag: 'v1.0.0 --force'

      # - name: Push to releases branch
      #   run: |
      #     git config user.name github-actions
      #     git config user.email github-actions@github.com
      #     git add actions/*
      #     git commit -m "nightly bundle"
      #     git push -f